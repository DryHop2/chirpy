### Health check
GET http://localhost:8080/api/healthz
Accept: text/plain

###

### Admin metrics
GET http://localhost:8080/admin/metrics
Accept: text/html

###

### Reset counter
POST http://localhost:8080/admin/reset
Content-Type: text/plain

###

### Fileserver - Load homepage
GET http://localhost:8080/app
Accept: text/html

###

### JSON check
POST http://localhost:8080/api/validate_chirp
Content-Type: application/json

{
    "body": "This is a fine chirp!"
}

###

### Profanity check
POST http://localhost:8080/api/validate_chirp
Content-Type: application/json

{
    "body": "this is a kerfuffle and sharbert opinion."
}

###

### Create Chirp - Valid
POST http://localhost:8080/api/chirps
Content-Type: application/json

{
  "body": "This is a chirp that should be cleaned of kerfuffle and stay under 140 characters.",
  "user_id": "8fc2d2e2-34a6-46e0-8c1a-de26d473b628"
}

###

### Get all chirps
GET http://localhost:8080/api/chirps
Accept: application/json

###

### Try to fetch non-existent chirp
GET http://localhost:8080/api/chirps/00000000-0000-0000-0000-000000000000
Accept: application/json

###

### Login to get JWT
POST http://localhost:8080/api/login
Content-Type: application/json

{
  "email": "saul@bettercall.com",
  "password": "123456"
}

> {% 
// Extract the token from the login response and save it as a variable
client.global.set("jwt_token", response.body.token);
%}

###

### Create a chirp (authenticated)
POST http://localhost:8080/api/chirps
Authorization: Bearer {{jwt_token}}
Content-Type: application/json

{
  "body": "This is my first JWT-authenticated chirp!"
}
